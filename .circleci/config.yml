defaults: &defaults
  working_directory: ~/GitHubUsers
  docker:
    - image: circleci/node:12-browsers

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: npm install
          command: npm install
      - save_cache:
          key: githubusers-{{ .Branch }}-cache-{{ checksum "package.json"}}-{{ checksum ".circleci/config.yml"}}-{{ checksum "karma.conf.js"}}
          paths:
            - ./node_modules
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: githubusers-{{ .Branch }}-cache-{{ checksum "package.json"}}-{{ checksum ".circleci/config.yml"}}-{{ checksum "karma.conf.js"}}
      - run:
          name: Save env
          command: env > env.txt
      - store_artifacts:
          path: env.txt
          destination: reports
      #- run:
      #    name: Run lint
      #    command: npm run eslint
      - run:
          name: Run tests + coverage
#          command: xvfb-run -a  npm run test-ci
          command:  npm run test-ci --no-watch --no-progress --browsers=ChromeHeadless
          #environment:
          #  CHROME_BIN: /usr/bin/google-chrome karma start --single-run
      - store_artifacts:
          path: reports/junit/
          destination: reports/junit/
      - store_artifacts:
          path: reports/detailed/
          destination: reports/detailed/
      - store_artifacts:
          path: coverage-report.lcov
          destination: reports
      - store_test_results:
          path: reports/junit
  deploy:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: githubusers-{{ .Branch }}-cache-{{ checksum "package.json"}}-{{ checksum ".circleci/config.yml"}}-{{ checksum "karma.conf.js"}}
      - run:
          name: Build prod
          command:  npm run build
      - store_artifacts:
          root: dist
          paths: dist
      - persist_to_workspace:
          root: dist
          paths: dist
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
            - tests
          filters:
            branches:
              only: master
      
