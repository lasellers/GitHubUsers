{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/gist/gist.component.html","webpack:///src/app/user-detail/user-detail.component.html","webpack:///src/app/user-followers/user-followers.component.html","webpack:///src/app/user-followings/user-followings.component.html","webpack:///src/app/user-gists/user-gists.component.html","webpack:///src/app/app.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/bytes.pipe.ts","webpack:///src/app/filter-followers.pipe.ts","webpack:///src/app/gist.model.ts","webpack:///src/app/gist/gist.component.css","webpack:///src/app/gist/gist.component.ts","webpack:///src/app/github-followers.service.ts","webpack:///src/app/github-followings.service.ts","webpack:///src/app/github-gist.service.ts","webpack:///src/app/github-gists.service.ts","webpack:///src/app/github-user.service.ts","webpack:///src/app/user-detail/user-detail.component.css","webpack:///src/app/user-detail/user-detail.component.ts","webpack:///src/app/user-followers/user-followers.component.css","webpack:///src/app/user-followers/user-followers.component.ts","webpack:///src/app/user-followings/user-followings.component.css","webpack:///src/app/user-followings/user-followings.component.ts","webpack:///src/app/user-gists/user-gists.component.css","webpack:///src/app/user-gists/user-gists.component.ts","webpack:///src/app/was-cached-highlight.directive.ts","webpack:///src/app/was-cached.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","console","clear","AppComponent","userService","gistService","followersService","followingsService","gistsService","toast","errorMessage$","version","title","name","filterString","gist","content","cached","baseUsername","getUserBasenameDefault","cachingStatus","userWasCached","followingsWasCached","followersWasCached","gistsWasCached","gistWasCached","useCached","users","username","getUser","subscribe","user","user$","emit","error","getFollowers","followers","followersCached$","followers$","getFollowings","followings","followingsCached$","followings$","getGists","gists","gistsCached$","gists$","gist$","next","wasCached","warning","timeOut","loadUser","login","success","info","gistSub","data","gistEvent","onErrorMessage","size","transform","filename","text","statusText","message","status","unsubscribe","clearGistCache","localStorage","showUser","value","isCaching","selector","template","AppModule","library","addIcons","declarations","imports","forRoot","providers","bootstrap","BytesPipe","units","bytes","precision","isNaN","parseFloat","String","isFinite","unitIndex","length","toFixed","FilterFollowersPipe","filters","propName","resultArray","item","toLowerCase","startsWith","push","Gist","contentUrl","language","url","GistComponent","constructor","GitHubFollowersService","http","apiCalls","removeItem","getItem","cachedObj","JSON","parse","get","getApiUrl","pipe","res","setItem","stringify","providedIn","GitHubFollowingsService","GitHubGistService","responseType","gist2","GitHubGistsService","results","processGistsToArray","rawGists","isCached","Array","isArray","processedGists","key","files","hasOwnProperty","file","raw_url","GitHubUserService","apiUrl","defaultBaseUsername","cachedUserObj","UserDetailComponent","notifyChangeBaseUsername","setTimeout","document","querySelector","classList","add","obj","UserFollowersComponent","notifyShowBaseUsername","cachedUsers","isUserWasCached","includes","UserFollowingsComponent","UserGistsComponent","getGist","gistResponse","WasCachedHighlightDirective","elementRef","classString","changeHighlight","changes","input","nativeElement","style","backgroundColor","remove","WasCachedPipe","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n          aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      https://github.com/\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\"\\n             #usernameInput name=\\\"baseUsername\\\" [(ngModel)]=\\\"baseUsername\\\"\\n             value=\\\"{{baseUsername}}\\\">\\n      <button class=\\\"btn btn-primary my-2 my-sm-0\\\" type=\\\"submit\\\"\\n              (click)=\\\"changeBaseUsername(usernameInput.value)\\\"\\n              placement=\\\"bottom\\\"\\n              ngbTooltip=\\\"Change base user\\\">User\\n      </button>\\n    </form>\\n\\n    <div class=\\\"col-sm align-bottom\\\">\\n      <button class=\\\"btn btn-outline-primary btn-sm my-2 my-sm-0\\\"\\n              (click)=\\\"changeBaseUsernameToDefault()\\\"\\n              placement=\\\"bottom\\\"\\n              ngbTooltip=\\\"Change to Default User\\\">Default User\\n      </button>\\n    </div>\\n\\n  </div>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n\\n  <p class=\\\"lead\\\">Learning Angular 9 using the GitHub API (v {{version}})</p>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      Local Storage Caching <input type=\\\"checkbox\\\"\\n                                   [(ngModel)]=\\\"userService.isCaching\\\"\\n                                   (change)=\\\"changeCaching(userService.isCaching)\\\">\\n    </div>\\n    <div class=\\\"col-sm-3\\\">\\n      <button class=\\\"btn btn-outline-primary btn-sm my-2 my-sm-0\\\" (click)=\\\"clearCache()\\\">Clear local storage cache\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\">\\n      Uncached Api Calls\\n    </div>\\n    <div class=\\\"col-sm-1\\\">\\n      User: {{userService.apiCalls}}\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      Followings: {{followingsService.apiCalls}}\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n      Followers: {{followersService.apiCalls}}\\n    </div>\\n    <div class=\\\"col-sm-1\\\">\\n      Gists: {{gistsService.apiCalls}}\\n    </div>\\n    <div class=\\\"col-sm-1\\\">\\n      Gist: {{gistService.apiCalls}}\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-sm-4\\\">\\n    </div>\\n\\n    <div class=\\\"col-sm-8\\\">\\n      <form class=\\\"form-inline\\\" role=\\\"form\\\">\\n\\n        <div class=\\\"form-group-row\\\">\\n          <label for=\\\"filterString\\\" class=\\\"sr-only\\\">Filter</label>\\n          <input type=\\\"text\\\" id=\\\"filterString\\\" name=\\\"filterString\\\" placeholder=\\\"Filter string...\\\"\\n                 class=\\\"form-control mb-2 mr-sm-2\\\" [(ngModel)]=\\\"filterString\\\">\\n        </div>\\n\\n      </form>\\n\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-sm-4\\\">\\n      <div appWasCachedHighlight\\n           [wasCached]=\\\"cachingStatus.userWasCached\\\"\\n           [classString]=\\\"'text-danger'\\\">\\n        <!--[ngClass]=\\\"{'text-info': cachingStatus.userWasCached, 'text-warning': !cachingStatus.userWasCached}\\\"-->\\n        User {{ cachingStatus.userWasCached | wasCached}}\\n        <fa-icon [icon]=\\\"['fas','cloud']\\\" *ngIf=\\\"userService.isUserCached(baseUsername)\\\"\\n                 placement=\\\"left\\\"\\n                 ngbTooltip=\\\"User is cached\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"['fas','cloud-download-alt']\\\" *ngIf=\\\"cachingStatus.userWasCached\\\"\\n                 placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Gist was cached\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"['fas','minus-circle']\\\"\\n                 (click)=\\\"userService.clearUserCache(baseUsername)\\\" placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Clear user cache\\\"></fa-icon>\\n      </div>\\n      <user-detail [baseUsername]=\\\"baseUsername\\\"\\n                   (notifyChangeBaseUsername)='onChangeBaseUsername($event)'></user-detail>\\n    </div>\\n\\n    <div class=\\\"col-sm-4\\\">\\n      <div appWasCachedHighlight\\n           [wasCached]=\\\"cachingStatus.followersWasCached\\\">\\n        Followers {{ cachingStatus.followersWasCached | wasCached}}\\n        <fa-icon [icon]=\\\"['fas','cloud']\\\" *ngIf=\\\"followersService.isFollowersCached(baseUsername)\\\"\\n                 placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Followers is cached {{gist.id}}\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"['fas','cloud-download-alt']\\\" *ngIf=\\\"cachingStatus.followersWasCached\\\"\\n                 placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Followers was cached {{gist.id}}\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"['fas','minus-circle']\\\"\\n                 (click)=\\\"followersService.clearFollowersCache(baseUsername)\\\" placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Clear followers cache\\\"></fa-icon>\\n      </div>\\n      <app-user-followers [baseUsername]=\\\"baseUsername\\\"\\n                          [filterString]=\\\"filterString\\\"\\n                          (notifyChangeBaseUsername)='onChangeBaseUsername($event)'\\n                          (notifyShowBaseUsername)='onShowBaseUsername($event)'></app-user-followers>\\n    </div>\\n\\n    <div class=\\\"col-sm-4\\\">\\n      <div appWasCachedHighlight\\n           [wasCached]=\\\"cachingStatus.followingsWasCached\\\">\\n        Followings {{ cachingStatus.followingsWasCached | wasCached}}\\n        <fa-icon [icon]=\\\"['fas','cloud']\\\" *ngIf=\\\"followingsService.isFollowingsCached(baseUsername)\\\"\\n                 placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Followings is cached\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"['fas','cloud-download-alt']\\\" *ngIf=\\\"cachingStatus.followingsWasCached\\\"\\n                 placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Followings was cached\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"['fas','minus-circle']\\\"\\n                 (click)=\\\"followingsService.clearFollowingsCache(baseUsername)\\\" placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Clear followings cache\\\"></fa-icon>\\n      </div>\\n      <app-user-followings [baseUsername]=\\\"baseUsername\\\"\\n                           [filterString]=\\\"filterString\\\"\\n                           (notifyChangeBaseUsername)='onChangeBaseUsername($event)'\\n                           (notifyShowBaseUsername)='onShowBaseUsername($event)'></app-user-followings>\\n    </div>\\n\\n  </div>\\n  <!-- /row -->\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n\\n      <div appWasCachedHighlight [wasCached]=\\\"cachingStatus.gistsWasCached\\\">\\n        Gists {{ cachingStatus.gistsWasCached | wasCached}}\\n        <fa-icon [icon]=\\\"['fas','cloud']\\\" *ngIf=\\\"gistsService.isGistsCached(baseUsername)\\\"\\n                 placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Gist is cached {{gist.id}}\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"['fas','cloud-download-alt']\\\" *ngIf=\\\"cachingStatus.gistsWasCached\\\"\\n                 placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Gist was cached {{gist.id}}\\\"></fa-icon>\\n        <fa-icon [icon]=\\\"['fas','minus-circle']\\\"\\n                 (click)=\\\"gistsService.clearGistsCache(baseUsername)\\\" placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Clear gists cache\\\"></fa-icon>\\n      </div>\\n      <app-user-gists [baseUsername]=\\\"baseUsername\\\"></app-user-gists>\\n\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n\\n      <div>\\n        Gist {{ cachingStatus.gistWasCached | wasCached}}\\n        <fa-icon [icon]=\\\"['fas','minus-circle']\\\" *ngIf=\\\"gistsService.isGistsCached(baseUsername)\\\"\\n                 (click)=\\\"gistService.clearGistCache(gist)\\\" placement=\\\"left\\\"\\n                 ngbTooltip=\\\"Clear gist cache\\\"></fa-icon>\\n      </div>\\n\\n      <app-gist></app-gist>\\n    </div>\\n  </div>\\n  <!-- /row -->\\n\\n</div>\\n<!-- /fluid-container -->\\n\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-3\\\">\\n        <a class=\\\"\\\" href=\\\"https://github.com/lasellers\\\">https://github.com/lasellers</a>\\n      </div>\\n      <div class=\\\"col-3\\\">\\n        <a class=\\\"\\\" href=\\\"https://github.com/{{baseUsername}}\\\">https://github.com/{{baseUsername}}</a>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"muted-text\\\">\\n      See README.md\\n    </div>\\n\\n  </div>\\n</footer>\\n\";","export default \"<div *ngIf=\\\"gist.content !== undefined\\\">\\n  <h2>Gist</h2>\\n  <div class=\\\"content\\\"><pre>\\n{{gist.content}}</pre>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"card card-default\\\">\\n  <img [src]=\\\"user.avatar_url\\\" class=\\\"card-img-top\\\" alt=\\\"{{user.name}}\\\" id=\\\"avatar_url\\\">\\n\\n  <div class=\\\"card-heading\\\">\\n    <h3 class=\\\"card-title\\\" *ngIf=\\\"!isEmpty(user)\\\">\\n      {{user.name}}\\n      <fa-icon [icon]=\\\"['fas','user-cog']\\\" (click)=\\\"changeBaseUsername(user.login)\\\"\\n               placement=\\\"left\\\" ngbTooltip=\\\"Make user base\\\"></fa-icon>\\n    </h3>\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n\\n    <div *ngIf=\\\"isEmpty(user)\\\">\\n      <p>Select one of the users {{userService.getUserBasename()}} is following to see their information.</p>\\n    </div>\\n\\n    <div class=\\\"card-text\\\" *ngIf=\\\"!isEmpty(user)\\\">\\n\\n      <form class=\\\"form-horizontal\\\">\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"login\\\">Username</label>\\n          <div class=\\\"col-sm-6 user-line\\\" id=\\\"login\\\">\\n            {{user.login}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"name\\\">Name</label>\\n          <div class=\\\"col-sm-6 user-line\\\" id=\\\"name\\\">\\n            {{user.name}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"hireable\\\">Hireable</label>\\n          <div class=\\\"col-sm-8 user-line\\\" id=\\\"hireable\\\">{{user.hireable == true ? \\\"Yes\\\" : \\\"No\\\"}}</div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"id\\\">Id</label>\\n          <div class=\\\"col-sm-6 user-line\\\" id=\\\"id\\\">\\n            {{user.id}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"company\\\">Company</label>\\n          <div class=\\\"col-sm-6 user-line\\\" id=\\\"company\\\">\\n            {{user.company}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"blog\\\">Blog</label>\\n          <div class=\\\"col-sm-6 user-line\\\" id=\\\"blog\\\">\\n            <a href=\\\"{{user.blog}}\\\">{{user.blog}}</a>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"location\\\">Location</label>\\n          <div class=\\\"col-sm-6 user-line\\\" id=\\\"location\\\">\\n            {{user.location}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"email\\\">Email</label>\\n          <div class=\\\"col-sm-6 user-line\\\" id=\\\"email\\\">\\n            <a href=\\\"mailto:{{user.email}}\\\">{{user.email}}</a>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-4 user-label\\\" for=\\\"bio\\\">Bio</label>\\n          <div class=\\\"col-sm-6 user-line\\\" id=\\\"bio\\\">\\n            {{user.bio}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-3 user-label\\\" for=\\\"public_repos\\\">Repos</label>\\n          <div class=\\\"col-sm-3 user-line\\\" id=\\\"public_repos\\\">{{user.public_repos}}</div>\\n          <label class=\\\"col-sm-3 user-label\\\" for=\\\"public_gists\\\">Gists</label>\\n          <div class=\\\"col-sm-3 user-line\\\" id=\\\"public_gists\\\">{{user.public_gists}}</div>\\n        </div>\\n\\n        <div class=\\\"row user-group\\\">\\n          <label class=\\\"col-sm-3 user-label\\\" for=\\\"followers\\\">Followers</label>\\n          <div class=\\\"col-sm-3 user-line\\\" id=\\\"followers\\\">{{user.followers}}</div>\\n\\n          <label class=\\\"col-sm-3 user-label\\\" for=\\\"following2\\\">Following</label>\\n          <div class=\\\"col-sm-3 user-line\\\" id=\\\"following2\\\">{{user.following}}</div>\\n        </div>\\n\\n      </form>\\n      <!-- / form-horizontal -->\\n\\n    </div>\\n    <!-- ngIf=\\\"user -->\\n    <div class=\\\"card-footer\\\">\\n\\n      <div class=\\\"row user-group\\\">\\n        <label class=\\\"col-sm-4 user-label\\\" for=\\\"created_at\\\">Created</label>\\n        <div class=\\\"col-sm-8 user-line\\\" id=\\\"created_at\\\">{{user.created_at | date:'short' }}</div>\\n      </div>\\n      <div class=\\\"row user-group\\\">\\n        <label class=\\\"col-sm-4 user-label\\\" for=\\\"updated_at\\\">Last updated</label>\\n        <div class=\\\"col-sm-8 user-line\\\" id=\\\"updated_at\\\">{{user.updated_at | date:'short'}}</div>\\n      </div>\\n\\n    </div>\\n    <!-- / card-footer -->\\n\\n  </div>\\n  <!-- / card-body -->\\n</div>\\n<!-- / card card-default -->\\n\";","export default \"<h3>Followers</h3>\\n<table class=\\\"table table-striped\\\">\\n  <tbody>\\n  <tr class=\\\"row\\\" *ngFor=\\\"let follower of followers | filterFollowers:filterString:'login'\\\">\\n    <td class=\\\"col\\\">\\n      <span (click)=\\\"showBaseUsername(follower.login)\\\">{{follower.login}}</span>\\n      <fa-icon [icon]=\\\"['fas','cloud']\\\" [hidden]=\\\"!userService.isUserCached(follower.login)\\\"\\n               placement=\\\"left\\\"\\n               ngbTooltip=\\\"User {{follower.login}} is cached localStorage\\\"></fa-icon>\\n      <fa-icon [icon]=\\\"['fas','cloud-download-alt']\\\" [hidden]=\\\"!isUserWasCached(follower.login)\\\"\\n               placement=\\\"left\\\" ngbTooltip=\\\"User {{follower.login}} was cached as of last pull\\\"></fa-icon>\\n    </td>\\n    <td class=\\\"col\\\">\\n      <button class=\\\"btn btn-primary btn-sm following\\\" (click)=\\\"changeBaseUsername(follower.login)\\\">User\\n      </button>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\";","export default \"<h3>Followings</h3>\\n<table class=\\\"table table-striped\\\">\\n  <tbody>\\n  <tr class=\\\"row\\\" *ngFor=\\\"let following of followings | filterFollowers:filterString:'login'\\\">\\n    <td class=\\\"col\\\">\\n      <span (click)=\\\"showBaseUsername(following.login)\\\">{{following.login}}</span>\\n      <fa-icon [icon]=\\\"['fas','cloud']\\\" *ngIf=\\\"userService.isUserCached(following.login)\\\"\\n               placement=\\\"left\\\"\\n               ngbTooltip=\\\"User {{following.login}} is cached localStorage\\\"></fa-icon>\\n      <fa-icon [icon]=\\\"['fas','cloud-download-alt']\\\" *ngIf=\\\"isUserWasCached(following.login)\\\"\\n               placement=\\\"left\\\" ngbTooltip=\\\"User {{following.login}} was cached as of last pull\\\"></fa-icon>\\n    </td>\\n    <td class=\\\"col\\\">\\n      <button class=\\\"btn btn-primary btn-sm following\\\" (click)=\\\"changeBaseUsername(following.login)\\\">User\\n      </button>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\";","export default \"<div class=\\\"card-heading\\\">\\n  <h3 class=\\\"card-title\\\" *ngIf=\\\"gists.length > 0\\\">\\n    Gists\\n  </h3>\\n</div>\\n<table class=\\\"table table-striped\\\" *ngIf=\\\"gists.length > 0\\\">\\n  <thead>\\n  <tr>\\n    <th>Filename</th>\\n    <th>Size</th>\\n    <th>Language</th>\\n    <th></th>\\n    <th></th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let gist of gists\\\">\\n    <td>\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"getGist(gist)\\\">Get</button>\\n    </td>\\n    <td>{{gist.filename}}</td>\\n    <td class=\\\"bytes\\\">\\n      <pre>{{gist.size | bytes}}</pre>\\n    </td>\\n    <td>{{gist.language}}</td>\\n    <td>\\n      <fa-icon [icon]=\\\"['fas','cloud']\\\" *ngIf=\\\"gistService.isGistCached(gist)\\\"\\n               placement=\\\"left\\\"\\n               ngbTooltip=\\\"Gist is cached {{gist.id}}\\\"></fa-icon>\\n      <fa-icon [icon]=\\\"['fas','cloud-download-alt']\\\" *ngIf=\\\"gist.wasCached\\\"\\n               placement=\\\"left\\\"\\n               ngbTooltip=\\\"Gist was cached {{gist.id}}\\\"></fa-icon>\\n      <fa-icon [icon]=\\\"['fas','minus-circle']\\\" *ngIf=\\\"gist.cached\\\"\\n               (click)=\\\"gistService.clearGistCache(gist)\\\" placement=\\\"left\\\"\\n               ngbTooltip=\\\"Clear gist cache {{gist.id}}\\\"></fa-icon>\\n    </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\";","export default \"html,\\nbody {\\n  background: #222;\\n  color: white;\\n}\\n\\n.click {\\n  text-decoration: underline;\\n  color: black;\\n}\\n\\n.click:hover {\\n  color: goldenrod;\\n}\\n\\n.username {\\n  padding: .5em;\\n}\\n\\n.following {\\n  padding: .5em;\\n}\\n\\n.user {\\n  background: white;\\n}\\n\\n.user-follows-back {\\n  background: yellow;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsZ0JBQWdCO0VBQ2hCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLDBCQUEwQjtFQUMxQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogIzIyMjtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY2xpY2sge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uY2xpY2s6aG92ZXIge1xuICBjb2xvcjogZ29sZGVucm9kO1xufVxuXG4udXNlcm5hbWUge1xuICBwYWRkaW5nOiAuNWVtO1xufVxuXG4uZm9sbG93aW5nIHtcbiAgcGFkZGluZzogLjVlbTtcbn1cblxuLnVzZXIge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxuLnVzZXItZm9sbG93cy1iYWNrIHtcbiAgYmFja2dyb3VuZDogeWVsbG93O1xufVxuXG4iXX0= */\";","import {\n  Component,\n  NgModule,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  Input,\n  ViewContainerRef,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { GitHubUserService } from './github-user.service';\nimport { ToastrService } from 'ngx-toastr';\n// @ts-ignore\nimport packageJson from '../../package.json';\nimport { faMinusCircle, faCloudDownloadAlt, faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { BytesPipe } from './bytes.pipe';\nimport { Gist } from './gist.model';\nimport { delay } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport { GitHubGistsService } from './github-gists.service';\nimport { GitHubFollowersService } from './github-followers.service';\nimport { GitHubFollowingsService } from './github-followings.service';\nimport { GitHubGistService } from './github-gist.service';\n\nconsole.clear();\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  @Output() errorMessage$ = new EventEmitter(true);\n\n  public version: string = packageJson.version;\n  public title: string = packageJson.name;\n  public filterString: string = '';\n\n  gist = {\n    content: '',\n    cached: false,\n    id: ''\n  };\n  @Input() baseUsername: string = this.userService.getUserBasenameDefault();\n  cachingStatus = {\n    userWasCached: false,\n    followingsWasCached: false,\n    followersWasCached: false,\n    gistsWasCached: false,\n    gistWasCached: false,\n    useCached: false,\n    users: []\n  };\n\n  /**\n   *\n   */\n  constructor(\n    public userService: GitHubUserService,\n    public gistService: GitHubGistService,\n    public followersService: GitHubFollowersService,\n    public followingsService: GitHubFollowingsService,\n    public gistsService: GitHubGistsService,\n    public toast: ToastrService\n  ) {\n    this.baseUsername = this.userService.getUserBasenameDefault();\n  }\n\n  public loadUser(username: string) {\n    this.baseUsername = username;\n    this.userService.getUser(username).subscribe((user) => {\n        this.userService.user$.emit(user);\n      },\n      error => {\n        this.userService.errorMessage$.emit(error);\n      });\n    this.followersService.getFollowers(username).subscribe(followers => {\n        this.followersService.followersCached$.emit(false);\n        this.followersService.followers$.emit(followers);\n      },\n      error => {\n        this.errorMessage$.emit(error);\n      }\n    );\n    this.followingsService.getFollowings(username).subscribe(followings => {\n        this.followingsService.followingsCached$.emit(false);\n        this.followingsService.followings$.emit(followings);\n      },\n      error => {\n        this.errorMessage$.emit(error);\n      }\n    );\n    this.gistsService.getGists(username).subscribe(\n      gists => {\n        this.gistsService.gistsCached$.emit(false);\n        this.gistsService.gists$.emit(gists);\n      },\n      error => {\n        this.errorMessage$.emit(error);\n      }\n      );\n    this.gistService.gist$.next({content: '', cached: true, wasCached: false});\n  }\n\n  public showUser(username: string) {\n    this.userService.getUser(username).subscribe((user) => {\n        this.userService.user$.emit(user);\n      },\n      error => {\n        this.userService.errorMessage$.emit(error);\n      });\n  }\n\n  ngOnInit() {\n    this.toast.warning(this.version, this.title, {\n      timeOut: 12000\n    });\n\n    /*Notification.requestPermission().then(permission => {\n      if(Notification.permission == 'granted') {\n        let notify = new Notification(this.title + ' ' + this.version);\n      }\n    });*/\n\n    this.loadUser(this.baseUsername);\n\n    this.userService.user$.subscribe(user => {\n      // const [cached, username] = cachedUsername;\n      const cached = user.wasCached;\n      const username = user.login;\n      this.cachingStatus.userWasCached = cached;\n      this.cachingStatus.users[username] = cached;\n      if (cached) {\n        this.toast.success(`User: ${username} (cached)`);\n      } else {\n        this.toast.info(`User: ${username} (caching...)`);\n      }\n    });\n\n    this.followersService.followersCached$.subscribe(cached => {\n      this.cachingStatus.followersWasCached = cached;\n      if (cached) {\n        this.toast.success(`Followers: ${this.baseUsername} (cached) `);\n      } else {\n        this.toast.info(`Followers: ${this.baseUsername} (caching...)`);\n      }\n    });\n\n    this.followingsService.followingsCached$.subscribe(cached => {\n      this.cachingStatus.followingsWasCached = cached;\n      if (cached) {\n        this.toast.success(`Followings: ${this.baseUsername} (cached) `);\n      } else {\n        this.toast.info(`Followings: ${this.baseUsername} (caching...)`);\n      }\n    });\n\n    this.gistsService.gistsCached$.subscribe(cached => {\n      this.cachingStatus.gistsWasCached = cached;\n      if (cached) {\n        this.toast.success(`Gists: ${this.baseUsername} (cached) `);\n      } else {\n        this.toast.info(`Gists: ${this.baseUsername} (caching...)`);\n      }\n    });\n\n    const gistSub: Subscription = this.gistService.gist$.subscribe(\n      data => {\n        if (data === null) {\n          this.toast.info('Clear gist cache');\n        } else {\n          this.gistEvent(data);\n        }\n      },\n      error => {\n        this.onErrorMessage(error);\n      }\n    );\n\n    this.userService.errorMessage$.subscribe(data => {\n      this.onErrorMessage(data);\n    });\n  }\n\n  gistEvent(data) {\n    this.gist = data;\n    this.cachingStatus.gistWasCached = data.cached;\n    const size = new BytesPipe().transform(data.size);\n    if (data.cached) {\n      this.toast.success(`${data.filename} (${size}) (cached)`, '', {\n        timeOut: 2000\n      });\n    } else {\n      this.toast.info(`${data.filename} (${size}) (caching...)`, '', {\n        timeOut: 2000\n      });\n    }\n  }\n\n  onErrorMessage(error): void {\n    const text: string = error.statusText || 'Internet Error';\n    const message: string = `Error: (${error.status}) (${error.message}) ${text}`;\n    console.error(`Error: ${message}`);\n    this.toast.error(text, `Error: ${message} `);\n  }\n\n  ngOnDestroy() {\n    this.userService.user$.unsubscribe();\n    this.followersService.followersCached$.unsubscribe();\n    this.followingsService.followingsCached$.unsubscribe();\n    this.gistsService.gistsCached$.unsubscribe();\n    this.gistService.gist$.unsubscribe();\n  }\n\n  clearGistCache(gist): void {\n    this.gistService.clearGistCache(gist);\n    this.gistService.gist$.next(gist);\n  }\n\n  clearCache() {\n    localStorage.clear();\n    this.loadUser(this.baseUsername);\n    this.cachingStatus = {\n      userWasCached: false,\n      followingsWasCached: false,\n      followersWasCached: false,\n      gistsWasCached: false,\n      gistWasCached: false,\n      useCached: false,\n      users: []\n    };\n    this.toast.success('Cache cleared');\n  }\n\n  // notifyChangeBaseUsername\n  onChangeBaseUsername(username: string) {\n    this.loadUser(username);\n    this.toast.info('onChangeBaseUsername: ' + username);\n  }\n\n  // notifyShowBaseUsername\n  onShowBaseUsername(username: string) {\n    this.showUser(username);\n    this.toast.info('onShowBaseUsername: ' + username);\n  }\n\n  changeBaseUsername(username: string) {\n    this.loadUser(username);\n    this.toast.success('Change baseUsername: ' + this.baseUsername);\n  }\n\n  changeBaseUsernameToDefault() {\n    this.loadUser(this.userService.getUserBasenameDefault());\n    this.toast.success('Change baseUsername to default ' + this.baseUsername);\n  }\n\n  changeCaching(value: boolean) {\n    this.userService.isCaching = value;\n    this.gistsService.isCaching = value;\n    this.gistService.isCaching = value;\n    this.followingsService.isCaching = value;\n    this.followersService.isCaching = value;\n    this.toast.success('Caching ' + (value ? 'On' : 'Off'), 'App');\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ViewContainerRef } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FaIconLibrary, FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n// import { fas } from '@fortawesome/free-solid-svg-icons';\n// import { far } from '@fortawesome/free-regular-svg-icons';\nimport {\n  faMinusCircle,\n  faCloudDownloadAlt,\n  faExchangeAlt,\n  faUserCog,\n  faCloud\n} from '@fortawesome/free-solid-svg-icons';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppComponent } from './app.component';\nimport { GitHubUserService } from './github-user.service';\nimport { UserDetailComponent } from './user-detail/user-detail.component';\nimport { UserFollowersComponent } from './user-followers/user-followers.component';\nimport { UserFollowingsComponent } from './user-followings/user-followings.component';\nimport { UserGistsComponent } from './user-gists/user-gists.component';\nimport { BytesPipe } from './bytes.pipe';\nimport { GistComponent } from './gist/gist.component';\nimport { WasCachedPipe } from './was-cached.pipe';\nimport { WasCachedHighlightDirective } from './was-cached-highlight.directive';\nimport { FilterFollowersPipe } from './filter-followers.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserDetailComponent,\n    UserFollowersComponent,\n    UserFollowingsComponent,\n    UserGistsComponent,\n    BytesPipe,\n    GistComponent,\n    WasCachedPipe,\n    WasCachedHighlightDirective,\n    FilterFollowersPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    NgbModule,\n    FontAwesomeModule\n  ],\n  providers: [\n    GitHubUserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  // constructor(library: FaIconLibrary) {\n  //  library.addIconPacks(fas);\n  // }\n  constructor(library: FaIconLibrary) {\n    // Add an icon to the library for convenient access in other components\n    library.addIcons(faMinusCircle, faCloudDownloadAlt, faExchangeAlt, faUserCog, faCloud);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'bytes'\n})\nexport class BytesPipe implements PipeTransform {\n\n  private units = [\n    'bytes',\n    'KB',\n    'MB',\n    'GB',\n    'TB'\n  ];\n\n  transform(bytes: number = 0, precision: number = 0): string {\n    if (isNaN(parseFloat(String(bytes))) || !isFinite(bytes)) {\n      return 'Not a number';\n    }\n\n    let unitIndex = 0;\n\n    while (bytes >= 1024 && unitIndex + 1 < this.units.length) {\n      bytes /= 1024;\n      unitIndex++;\n    }\n\n    return bytes.toFixed(+precision) + ' ' + this.units[unitIndex];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterFollowers',\n  // pure: false\n})\nexport class FilterFollowersPipe implements PipeTransform {\n\n  transform(filters: any, filterString: string, propName: string): any {\n    if (filters.length === 0 || filterString === '') {\n      return filters;\n    }\n    const resultArray = [];\n    for (const item of filters) {\n      if (item[propName].toLowerCase().startsWith(filterString.toLowerCase())) {\n        resultArray.push(item);\n      }\n    }\n    return resultArray;\n  }\n\n}\n","export class Gist {\n\n  constructor(\n    public content: string = '',\n    public filename: string = '',\n    public size: number = 0,\n    public contentUrl: string = '',\n    public language: string = '',\n    public url: string = '',\n    public id: string = '',\n    public cached: boolean = false,\n    public wasCached: boolean = false,\n  ) {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dpc3QvZ2lzdC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { Gist } from '../gist.model';\nimport { GitHubGistService } from '../github-gist.service';\n\n@Component({\n  selector: 'app-gist',\n  templateUrl: './gist.component.html',\n  styleUrls: ['./gist.component.css']\n})\nexport class GistComponent implements OnInit, OnDestroy {\n  @Output() errorMessage$ = new EventEmitter(true);\n  gist: Gist;\n\n  constructor(\n    public gistService: GitHubGistService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.gist = Gist.constructor();\n    this.gistService.gist$.subscribe(\n      data => {\n        this.gist = data as any;\n        // this.gistEvent(data);\n      },\n      error => {\n        this.errorMessage$.emit(error);\n      }\n    );\n  }\n\n  // gistEvent(data): void {\n  //  this.gist = data;\n  // }\n\n  ngOnDestroy(): void {\n    this.gistService.gist$.unsubscribe();\n  }\n\n}\n","import { EventEmitter, Injectable, Input, Output } from '@angular/core';\nimport { of, Subscription } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { GitHubUserService } from './github-user.service';\n\n/**\n * Note: We could eliminate a lot of the event emitters etc in the services and just use\n * a public variable, however, part of the point of this repo is experimenting with\n * observables and the like...\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitHubFollowersService {\n  @Output() errorMessage$ = new EventEmitter(true);\n  @Input() isCaching: boolean = true;\n  @Output() followersCached$ = new EventEmitter(true);\n  @Output() followers$ = new EventEmitter(true);\n\n  // These are resolved async\n  public apiCalls: number = 0;\n\n  constructor(\n    private http: HttpClient,\n    private userService: GitHubUserService\n  ) {\n  }\n\n  clearFollowersCache(username: string): void {\n    if (username != null) {\n      localStorage.removeItem('followers_' + username);\n      this.followersCached$.emit(status);\n    }\n  }\n\n  public isFollowersCached(username: string): boolean {\n    return (localStorage.getItem('followers_' + username) !== null);\n  }\n\n  public getFollowers(username: string) {\n    if (this.isCaching) {\n      const cachedObj = localStorage.getItem('followers_' + username);\n      if (cachedObj !== null) {\n        const followers = JSON.parse(cachedObj);\n        return of(followers);\n      }\n    }\n\n    return this.http.get(this.userService.getApiUrl() + username + '/followers').pipe(\n      delay(0),\n      map((res: HttpResponse<any>) => res),\n      map((followers) => {\n        this.apiCalls++;\n        if (this.isCaching) {\n          localStorage.setItem('followers_' + username, JSON.stringify(followers));\n        }\n        return followers;\n      })\n    );\n  }\n\n}\n","import { EventEmitter, Injectable, Input, Output } from '@angular/core';\nimport { of, Subscription } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { GitHubUserService } from './github-user.service';\n\n/**\n * Note: We could eliminate a lot of the event emitters etc in the services and just use\n * a public variable, however, part of the point of this repo is experimenting with\n * observables and the like...\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitHubFollowingsService {\n  @Output() errorMessage$ = new EventEmitter(true);\n  @Input() isCaching: boolean = true;\n  @Output() followingsCached$ = new EventEmitter(true);\n  @Output() followings$ = new EventEmitter(true);\n\n  // These are resolved async\n  public apiCalls: number = 0;\n\n  constructor(\n    private http: HttpClient,\n    private userService: GitHubUserService\n  ) {\n  }\n\n  clearFollowingsCache(username: string): void {\n    if (username != null) {\n      localStorage.removeItem('followings_' + username);\n      this.followingsCached$.emit(status);\n    }\n  }\n\n  public isFollowingsCached(username: string): boolean {\n    return (localStorage.getItem('followings_' + username) !== null);\n  }\n\n  public getFollowings(username: string) {\n    if (this.isCaching) {\n      const cachedObj = localStorage.getItem('followings_' + username);\n      if (cachedObj !== null) {\n        const followings = JSON.parse(cachedObj);\n        return of(followings);\n      }\n    }\n\n    return this.http.get(this.userService.getApiUrl() + username + '/following').pipe(\n      delay(0),\n      map((res: HttpResponse<any>) => res),\n      map((followings) => {\n        this.apiCalls++;\n        if (this.isCaching) {\n          localStorage.setItem('followings_' + username, JSON.stringify(followings));\n        }\n        return followings;\n      })\n    );\n  }\n}\n","import { EventEmitter, Injectable, Input, Output } from '@angular/core';\nimport { of, Subject, Subscription } from 'rxjs';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { delay, map } from 'rxjs/operators';\nimport { Gist } from './gist.model';\n\n/**\n * Note: We could eliminate a lot of the event emitters etc in the services and just use\n * a public variable, however, part of the point of this repo is experimenting with\n * observables and the like...\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitHubGistService {\n  @Output() errorMessage$ = new EventEmitter(true);\n  // @Output() gist$ = new EventEmitter(true);\n  @Output() public gist$ = new Subject();\n\n  // These are resolved async\n  @Input() isCaching: boolean = true;\n  public apiCalls: number = 0;\n\n  // public gistObs$ = this.gist$.asObservable();\n\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  public isGistCached(gist): boolean {\n    return (localStorage.getItem('gist_' + gist.id + gist.filename) !== null);\n  }\n\n  clearGistCache(gist): void {\n    localStorage.removeItem('gist_' + gist.id + gist.filename);\n    if (typeof gist === 'object') {\n      gist = Gist.constructor(); // this.blankGist();\n    }\n    this.gist$.next(gist);\n  }\n\n  public getGist(gist: Gist) {\n    if (this.isCaching) {\n      const content = localStorage.getItem('gist_' + gist.id + gist.filename);\n      if (content !== null) {\n        gist = {...gist, content, cached: true, wasCached: true};\n        return of(gist);\n      }\n    }\n\n    return this.http.get(gist.contentUrl, {responseType: 'text'}).pipe(\n      delay(0),\n      map((gist2) => {\n          this.apiCalls++;\n          if (this.isCaching && gist.size < (1024 * 32)) { /* store 32kb max if caching */\n            localStorage.setItem('gist_' + gist.id + gist.filename, gist2);\n          }\n          gist = {...gist, content: gist2, cached: true, wasCached: false};\n          return gist;\n        }\n      ));\n  }\n\n}\n","import { EventEmitter, Injectable, Input, Output } from '@angular/core';\nimport { Gist } from './gist.model';\nimport { delay, map, tap } from 'rxjs/operators';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { GitHubUserService } from './github-user.service';\n\n/**\n * Note: We could eliminate a lot of the event emitters etc in the services and just use\n * a public variable, however, part of the point of this repo is experimenting with\n * observables and the like...\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GitHubGistsService {\n\n  constructor(\n    private http: HttpClient,\n    private userService: GitHubUserService\n  ) {\n  }\n\n  @Output() errorMessage$ = new EventEmitter(true);\n  @Output() gistsCached$ = new EventEmitter(true);\n  @Output() gists$ = new EventEmitter(true);\n\n  // These are resolved async\n  public apiCalls: number = 0;\n  @Input() isCaching: boolean = true;\n\n  /**\n   * Converts the raw gists data from the api into a simplified object type (called Gist)\n   * @param rawGists\n   * @param isCached\n   */\n  public static processGistsToArray(rawGists, isCached: boolean): Gist[] {\n    // If not an array of data, abort early with an empty array\n    if (!Array.isArray(rawGists)) return [];\n    // process raw gists api data into new array\n    const processedGists = [];\n    for (const gist of rawGists) {\n      for (const key in gist.files) {\n        if (gist.files.hasOwnProperty(key)) {\n          const file = gist.files[key];\n          if (file.hasOwnProperty('raw_url')) {\n            processedGists.push({\n              id: gist.id,\n              url: file.url,\n              contentUrl: file.raw_url,\n              filename: file.filename,\n              language: file.language,\n              size: file.size,\n              content: gist,\n              cached: isCached\n            });\n          }\n        }\n      }\n    }\n    return processedGists;\n  }\n\n  public isGistsCached(username: string): boolean {\n    return (localStorage.getItem('gists_' + username) !== null);\n  }\n\n  clearGistsCache(username: string): void {\n    localStorage.removeItem('gists_' + username);\n    this.gistsCached$.emit(false);\n  }\n\n  public getGists(username: string): any {\n    if (this.isCaching) {\n      const cachedObj = localStorage.getItem('gists_' + username);\n      if (cachedObj !== null) {\n        const gists = JSON.parse(cachedObj);\n        return of<Gist>(gists);\n      }\n    }\n\n    return this.http.get<Gist>(this.userService.getApiUrl() + username + '/gists').pipe(\n      delay(0),\n      map((results) => GitHubGistsService.processGistsToArray(results, false)),\n      map((gists) => {\n        this.apiCalls++;\n        if (this.isCaching) {\n          localStorage.setItem('gists_' + username, JSON.stringify(gists));\n        }\n        return gists;\n      })\n    );\n  }\n\n}\n","import { delay, map } from 'rxjs/operators';\nimport { EventEmitter, Injectable, Input, Output } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { of, Subject, Subscription } from 'rxjs';\nimport { Gist } from './gist.model';\nimport { User } from './user.model';\n\n/**\n * Note: As this is experimental, this service is both acting as a singleton in someways and also emitting data for capture by components.\n * Generally you'd only want to do one or the other, depending on the situation.\n */\n@Injectable({providedIn: 'root'})\nexport class GitHubUserService {\n  private apiUrl: string = 'https://api.github.com/users/';\n  // private apiUrl: string = 'https://localhost:3000/users/';\n\n  // current data\n  private defaultBaseUsername: string = 'lasellers';\n  private baseUsername: string = 'lasellers';\n\n  // These are resolved async\n  public apiCalls: number = 0;\n\n  //\n  @Input() isCaching: boolean = true;\n\n  // Make all of these async so we don't have a checked error\n  // Note also, since this is a service, we can't just hook these up as output\n  // on the component but must subscribe to them.\n  // @Output() userCached$ = new EventEmitter(true);\n\n  @Output() user$ = new EventEmitter(true);\n  @Output() errorMessage$ = new EventEmitter(true);\n\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  getApiUrl(): string {\n    return this.apiUrl;\n  }\n\n  getUserBasename(): string {\n    return this.baseUsername;\n  }\n\n  getUserBasenameDefault(): string {\n    return this.defaultBaseUsername;\n  }\n\n  clearUserCache(username: string): void {\n    // if (this.user.hasOwnProperty('login')) {\n    //  localStorage.removeItem('user_' + this.user.login);\n    //  this.emitCacheStatusUser(false, this.user.login);\n    // }\n    localStorage.removeItem('user_' + username);\n    this.user$.emit({login: username, wasCached: false});\n  }\n\n  public isUserCached(username: string): boolean {\n    return (localStorage.getItem('user_' + username) !== null);\n  }\n\n  public getUser(username: string) {\n    if (this.isCaching) {\n      const cachedUserObj = localStorage.getItem('user_' + username);\n      if (cachedUserObj !== null) {\n        const user = JSON.parse(cachedUserObj);\n        return of({...user, wasCached: true});\n      }\n    }\n\n    return this.http.get(this.apiUrl + username).pipe(\n      delay(0),\n      // map((res: HttpResponse<any>) => res),\n      map((user: User) => {\n          this.apiCalls++;\n          if (this.isCaching) {\n            localStorage.setItem('user_' + username, JSON.stringify(user));\n          }\n          return {...user, wasCached: false};\n        }\n      ));\n  }\n}\n","export default \".user-group {\\n  margin: 0;\\n  padding: 0;\\n  clear: both;\\n}\\n\\n.user-group label, .user-label {\\n  margin: 0;\\n  font-weight: bold;\\n  text-align: right;\\n  padding: 0;\\n  width: 100%;\\n}\\n\\n.user-group div, .user-line {\\n  margin: 0;\\n  text-align: left;\\n  padding: 0px 0px 0px 1em;\\n  width: 100%;\\n}\\n\\n.card {\\n  height: auto;\\n  max-height: 0;\\n  overflow-y: hidden;\\n  transition: max-height 3s ease-out;\\n}\\n\\n.card-open {\\n  display: block;\\n  border: 1px solid black;\\n  max-height: 1080px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1kZXRhaWwvdXNlci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFNBQVM7RUFDVCxVQUFVO0VBQ1YsV0FBVztBQUNiOztBQUVBO0VBQ0UsU0FBUztFQUNULGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsVUFBVTtFQUNWLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFNBQVM7RUFDVCxnQkFBZ0I7RUFDaEIsd0JBQXdCO0VBQ3hCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGtDQUFrQztBQUNwQzs7QUFFQTtFQUNFLGNBQWM7RUFDZCx1QkFBdUI7RUFDdkIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvdXNlci1kZXRhaWwvdXNlci1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLWdyb3VwIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBjbGVhcjogYm90aDtcbn1cblxuLnVzZXItZ3JvdXAgbGFiZWwsIC51c2VyLWxhYmVsIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4udXNlci1ncm91cCBkaXYsIC51c2VyLWxpbmUge1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDBweCAwcHggMHB4IDFlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5jYXJkIHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtYXgtaGVpZ2h0OiAwO1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG4gIHRyYW5zaXRpb246IG1heC1oZWlnaHQgM3MgZWFzZS1vdXQ7XG59XG5cbi5jYXJkLW9wZW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIG1heC1oZWlnaHQ6IDEwODBweDtcbn1cbiJdfQ== */\";","import { Component, EventEmitter, OnInit, Output, Input } from '@angular/core';\nimport { GitHubUserService } from '../github-user.service';\nimport { User } from '../user.model';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n  @Input() baseUsername;\n  @Output() notifyChangeBaseUsername: EventEmitter<string> = new EventEmitter<string>();\n  public user: User = {};\n\n  constructor(\n    public userService: GitHubUserService\n  ) {\n  }\n\n  ngOnInit() {\n    this.userService.user$.subscribe(user => {\n      this.user = user;\n    });\n\n    this.userService.getUser(this.baseUsername).subscribe((user) => {\n        this.userService.user$.emit(user);\n      },\n      error => {\n        this.userService.errorMessage$.emit(error);\n      });\n\n    setTimeout(() => {\n      document.querySelector('.card').classList.add('card-open');\n    }, 0);\n\n  }\n\n  isEmpty(obj) {\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  changeBaseUsername(username: string): void {\n    this.notifyChangeBaseUsername.emit(username);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZm9sbG93ZXJzL3VzZXItZm9sbG93ZXJzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, EventEmitter, Input, OnInit, OnDestroy, Output } from '@angular/core';\nimport { GitHubUserService } from '../github-user.service';\nimport { GitHubFollowersService } from '../github-followers.service';\n\n@Component({\n  selector: 'app-user-followers',\n  templateUrl: './user-followers.component.html',\n  styleUrls: ['./user-followers.component.css']\n})\nexport class UserFollowersComponent implements OnInit, OnDestroy {\n  @Input() baseUsername;\n  @Input() filterString: string = '';\n  @Output() errorMessage$ = new EventEmitter(true);\n  @Output() notifyChangeBaseUsername = new EventEmitter();\n  @Output() notifyShowBaseUsername = new EventEmitter();\n  public cachedUsers = [];\n  public followers = [];\n\n  constructor(\n    public userService: GitHubUserService,\n    public followersService: GitHubFollowersService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.userService.user$.subscribe(user => {\n      this.cachedUsers[user.login] = user.wasCached;\n    });\n\n    //\n    this.followersService.followers$.subscribe(followers => {\n      this.followers = followers;\n\n      for (const user of this.followers) {\n        if (this.isUserWasCached(user.login)) {\n          this.cachedUsers[user.login] = true;\n        }\n      }\n    });\n\n    this.followersService.getFollowers(this.baseUsername).subscribe(followers => {\n        this.followersService.followersCached$.emit(false);\n        this.followersService.followers$.emit(followers);\n      },\n      error => {\n        this.errorMessage$.emit(error);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.userService.user$.unsubscribe();\n  }\n\n  isUserWasCached(username: string): boolean {\n    return (this.cachedUsers.includes(username));\n  }\n\n  changeBaseUsername(username: string): void {\n    this.notifyChangeBaseUsername.emit(username);\n  }\n\n  showBaseUsername(username: string): void {\n    this.notifyShowBaseUsername.emit(username);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZm9sbG93aW5ncy91c2VyLWZvbGxvd2luZ3MuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, EventEmitter, Input, OnInit, OnDestroy, Output } from '@angular/core';\nimport { GitHubUserService } from '../github-user.service';\nimport { GitHubFollowingsService } from '../github-followings.service';\n\n@Component({\n  selector: 'app-user-followings',\n  templateUrl: './user-followings.component.html',\n  styleUrls: ['./user-followings.component.css']\n})\nexport class UserFollowingsComponent implements OnInit, OnDestroy {\n  @Input() baseUsername;\n  @Input() filterString: string = '';\n  @Output() errorMessage$ = new EventEmitter(true);\n  @Output() notifyChangeBaseUsername = new EventEmitter();\n  @Output() notifyShowBaseUsername = new EventEmitter();\n  public cachedUsers = [];\n  public followings = [];\n\n  constructor(\n    public userService: GitHubUserService,\n    public followingsService: GitHubFollowingsService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.userService.user$.subscribe(user => {\n      this.cachedUsers[user.login] = user.wasCached;\n    });\n\n    //\n    this.followingsService.followings$.subscribe(followings => {\n      this.followings = followings;\n\n      for (const user of this.followings) {\n        if (this.isUserWasCached(user.login)) {\n          this.cachedUsers[user.login] = true;\n        }\n      }\n    });\n\n    this.followingsService.getFollowings(this.baseUsername).subscribe(followings => {\n        this.followingsService.followingsCached$.emit(false);\n        this.followingsService.followings$.emit(followings);\n      },\n      error => {\n        this.errorMessage$.emit(error);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.userService.user$.unsubscribe();\n  }\n\n  isUserWasCached(username: string): boolean {\n    return (this.cachedUsers.includes(username));\n  }\n\n  changeBaseUsername(username: string): void {\n    this.notifyChangeBaseUsername.emit(username);\n  }\n\n  showBaseUsername(username: string): void {\n    this.notifyShowBaseUsername.emit(username);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZ2lzdHMvdXNlci1naXN0cy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, EventEmitter, Input, OnInit, OnDestroy, Output } from '@angular/core';\nimport { GitHubGistsService } from '../github-gists.service';\nimport { Gist } from '../gist.model';\nimport { GitHubGistService } from '../github-gist.service';\n\n@Component({\n  selector: 'app-user-gists',\n  templateUrl: './user-gists.component.html',\n  styleUrls: ['./user-gists.component.css']\n})\nexport class UserGistsComponent implements OnInit, OnDestroy {\n  @Input() baseUsername;\n  @Output() errorMessage$ = new EventEmitter(true);\n  @Output() gistsCached$ = new EventEmitter(true);\n  @Output() gists$ = new EventEmitter(true);\n  public gists: Gist[] = [];\n\n  constructor(\n    public gistsService: GitHubGistsService,\n    public gistService: GitHubGistService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.gistsService.gists$.subscribe(gists => {\n      this.gists = gists;\n    });\n\n    this.gistsService.getGists(this.baseUsername).subscribe(\n      gists => {\n        this.gistsCached$.emit(false);\n        this.gists$.emit(gists);\n      },\n      error => {\n        this.errorMessage$.emit(error);\n      });\n  }\n\n  getGist(gist: Gist) {\n    this.gistService.getGist(gist).subscribe(\n      gistResponse => {\n        this.gistService.gist$.next(gistResponse);\n      },\n      error => {\n        this.errorMessage$.emit(error);\n      });\n  }\n\n  ngOnDestroy() {\n    this.gistsService.gists$.unsubscribe();\n  }\n\n}\n","import { OnInit, Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Directive({\n  selector: '[appWasCachedHighlight]'\n})\nexport class WasCachedHighlightDirective implements OnInit, OnChanges {\n  @Input() wasCached: boolean = false; // [wasCached]=\"'false'\"\n  @Input() classString: string = 'text-info'; // [classString]=\"'text-warning'\"\n  public elementRef: ElementRef;\n\n  constructor(\n    elementRef: ElementRef\n  ) {\n    this.elementRef = elementRef;\n  }\n\n  ngOnInit() {\n    this.changeHighlight();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.input) {\n      this.changeHighlight();\n    }\n  }\n\n  changeHighlight() {\n    if (this.wasCached) {\n      this.elementRef.nativeElement.style.backgroundColor = 'yellow';\n      this.elementRef.nativeElement.classList.add('text-info');\n    } else {\n      this.elementRef.nativeElement.style.backgroundColor = 'white';\n      this.elementRef.nativeElement.classList.remove('text-info');\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'wasCached'\n})\nexport class WasCachedPipe implements PipeTransform {\n\n  transform(value: boolean): string {\n    return value ? 'Was previously Cached' : 'Was NOT previously Cached';\n    // return value ? '<span class=\"text-info\">Was Cached<span>' : '<span class=\"text-warning\">Was NOT Cached</span>';\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}